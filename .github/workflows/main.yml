name: Main

on:
  push:
    branches: [main]
    tags: [v*.*.*]
  pull_request:
    branches: [main]

permissions:
  contents: read

jobs:
  lint:
    name: Lint code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@4959332f0f014c5280e7eac8b70c90cb574c9f9b # v6.6.0
        with:
          enable-cache: true

      - name: Install project
        run: uv sync --frozen

      - name: Lint code
        run: make lint

  test:
    name: Tests
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.12", "3.13"]
        firebird-version: ["5"]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup firebird container
        uses: juarezr/firebirdsql-github-action@0e61cbd19b478e5daa357d70039673f25234f379 # v2.0.1
        with:
          version: ${{ matrix.firebird-version }}
          firebird_database: testdb.fdb
          firebird_user: testuser
          firebird_password: testpass

      - name: Install uv
        uses: astral-sh/setup-uv@4959332f0f014c5280e7eac8b70c90cb574c9f9b # v6.6.0
        with:
          enable-cache: true
          python-version: ${{ matrix.python-version }}

      - name: Install project
        run: uv sync --frozen

      - name: Run tests
        run: uv run pytest

      - name: Upload coverage to Codecov
        if: matrix.os == 'ubuntu-latest' && matrix.firebird-version == '5' && matrix.python-version == '3.13'
        uses: codecov/codecov-action@fdcc8476540edceab3de004e990f80d881c6cc00 # v5.5.0

  pypi-deploy:
    name: Release to PyPI
    if: github.ref_type == 'tag'
    needs: [lint, test]
    environment: pypi
    permissions:
      id-token: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@4959332f0f014c5280e7eac8b70c90cb574c9f9b # v6.6.0
        with:
          enable-cache: true

      - name: Build package
        run: uv build

      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@76f52bc884231f62b9a034ebfe128415bbaabdfc # v1.12.4

  github-deploy:
    name: Release to GitHub
    if: github.ref_type == 'tag'
    needs: [lint, test]
    environment: github-releases
    permissions:
      contents: write
    env:
      CHANGELOG: https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md
      PRERELEASE: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Create GitHub Release
        run: |
          gh release create ${{ github.ref_name }} \
            --title ${{ github.ref_name }} \
            --notes="See [the CHANGELOG](${{ env.CHANGELOG }}) for more details." \
            --draft=${{ env.PRERELEASE }} \
            --prerelease=${{ env.PRERELEASE }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docs-build:
    name: Build docs
    if: github.ref_type == 'tag'
    needs: [lint, test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@4959332f0f014c5280e7eac8b70c90cb574c9f9b # v6.6.0
        with:
          enable-cache: true

      - name: Build docs
        run: uv run --frozen mkdocs build

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: site

  docs-deploy:
    name: Deploy docs
    if: true && !contains(github.ref, 'alpha')
    needs: [docs-build]
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      id-token: write
      pages: write
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
